KEYWORD	 class
CLASS_IDENTIFIER	 CellularAutomaton
OBJECT_IDENTIFIER	 inherits
CLASS_IDENTIFIER	 IO
ERROR	 {
OBJECT_IDENTIFIER	 population_map
ERROR	 :
CLASS_IDENTIFIER	 String
ERROR	 ;
OBJECT_IDENTIFIER	 init
ERROR	 (
OBJECT_IDENTIFIER	 map
ERROR	 :
CLASS_IDENTIFIER	 String
ERROR	 )
ERROR	 :
CLASS_IDENTIFIER	 SELF_TYPE
ERROR	 {
ERROR	 {
OBJECT_IDENTIFIER	 population_map
ERROR	 <
ERROR	 -
OBJECT_IDENTIFIER	 map
ERROR	 ;
OBJECT_IDENTIFIER	 self
ERROR	 ;
ERROR	 }
ERROR	 }
ERROR	 ;
OBJECT_IDENTIFIER	 print
ERROR	 (
ERROR	 )
ERROR	 :
CLASS_IDENTIFIER	 SELF_TYPE
ERROR	 {
ERROR	 {
OBJECT_IDENTIFIER	 out_string
ERROR	 (
OBJECT_IDENTIFIER	 population_map
OPERATOR	 .
OBJECT_IDENTIFIER	 concat
ERROR	 (
STRING	 "\n"
ERROR	 )
ERROR	 )
ERROR	 ;
OBJECT_IDENTIFIER	 self
ERROR	 ;
ERROR	 }
ERROR	 }
ERROR	 ;
OBJECT_IDENTIFIER	 num_cells
ERROR	 (
ERROR	 )
ERROR	 :
CLASS_IDENTIFIER	 Int
ERROR	 {
OBJECT_IDENTIFIER	 population_map
OPERATOR	 .
OBJECT_IDENTIFIER	 length
ERROR	 (
ERROR	 )
ERROR	 }
ERROR	 ;
OBJECT_IDENTIFIER	 cell
ERROR	 (
OBJECT_IDENTIFIER	 position
ERROR	 :
CLASS_IDENTIFIER	 Int
ERROR	 )
ERROR	 :
CLASS_IDENTIFIER	 String
ERROR	 {
OBJECT_IDENTIFIER	 population_map
OPERATOR	 .
OBJECT_IDENTIFIER	 substr
ERROR	 (
OBJECT_IDENTIFIER	 position
PUNCTUATION	 ,
INTEGER	 1
ERROR	 )
ERROR	 }
ERROR	 ;
OBJECT_IDENTIFIER	 cell_left_neighbor
ERROR	 (
OBJECT_IDENTIFIER	 position
PUNCTUATION	 :
CLASS_IDENTIFIER	 Int
ERROR	 )
PUNCTUATION	 :
CLASS_IDENTIFIER	 String
ERROR	 {
OBJECT_IDENTIFIER	 if
OBJECT_IDENTIFIER	 position
ERROR	 =
INTEGER	 0
OBJECT_IDENTIFIER	 then
OBJECT_IDENTIFIER	 cell
ERROR	 (
OBJECT_IDENTIFIER	 num_cells
ERROR	 (
ERROR	 )
ERROR	 -
INTEGER	 1
ERROR	 )
OBJECT_IDENTIFIER	 else
OBJECT_IDENTIFIER	 cell
ERROR	 (
OBJECT_IDENTIFIER	 position
ERROR	 -
INTEGER	 1
ERROR	 )
OBJECT_IDENTIFIER	 fi
ERROR	 }
ERROR	 ;
OBJECT_IDENTIFIER	 cell_right_neighbor
ERROR	 (
OBJECT_IDENTIFIER	 position
PUNCTUATION	 :
CLASS_IDENTIFIER	 Int
ERROR	 )
PUNCTUATION	 :
CLASS_IDENTIFIER	 String
ERROR	 {
OBJECT_IDENTIFIER	 if
OBJECT_IDENTIFIER	 position
ERROR	 =
OBJECT_IDENTIFIER	 num_cells
ERROR	 (
ERROR	 )
ERROR	 -
INTEGER	 1
OBJECT_IDENTIFIER	 then
OBJECT_IDENTIFIER	 cell
ERROR	 (
INTEGER	 0
ERROR	 )
OBJECT_IDENTIFIER	 else
OBJECT_IDENTIFIER	 cell
ERROR	 (
OBJECT_IDENTIFIER	 position
ERROR	 +
INTEGER	 1
ERROR	 )
OBJECT_IDENTIFIER	 fi
ERROR	 }
ERROR	 ;
ERROR	 (
ERROR	 *
OBJECT_IDENTIFIER	 a
OBJECT_IDENTIFIER	 cell
OBJECT_IDENTIFIER	 will
OBJECT_IDENTIFIER	 live
OBJECT_IDENTIFIER	 if
OBJECT_IDENTIFIER	 exactly
INTEGER	 1
OBJECT_IDENTIFIER	 of
OBJECT_IDENTIFIER	 itself
OBJECT_IDENTIFIER	 and
OBJECT_IDENTIFIER	 it
ERROR	 '
OBJECT_IDENTIFIER	 s
OBJECT_IDENTIFIER	 immediate
OBJECT_IDENTIFIER	 neighbors
OBJECT_IDENTIFIER	 are
OBJECT_IDENTIFIER	 alive
OBJECT_IDENTIFIER	 cell_at_next_evolution
ERROR	 (
OBJECT_IDENTIFIER	 position
PUNCTUATION	 :
CLASS_IDENTIFIER	 Int
ERROR	 )
PUNCTUATION	 :
CLASS_IDENTIFIER	 String
ERROR	 {
OBJECT_IDENTIFIER	 if
ERROR	 (
OBJECT_IDENTIFIER	 if
OBJECT_IDENTIFIER	 cell
ERROR	 (
OBJECT_IDENTIFIER	 position
ERROR	 )
ERROR	 =
STRING	 "X"
OBJECT_IDENTIFIER	 then
INTEGER	 1
OBJECT_IDENTIFIER	 else
INTEGER	 0
OBJECT_IDENTIFIER	 fi
ERROR	 +
OBJECT_IDENTIFIER	 if
OBJECT_IDENTIFIER	 cell_left_neighbor
ERROR	 (
OBJECT_IDENTIFIER	 position
ERROR	 )
ERROR	 =
STRING	 "X"
OBJECT_IDENTIFIER	 then
INTEGER	 1
OBJECT_IDENTIFIER	 else
INTEGER	 0
OBJECT_IDENTIFIER	 fi
ERROR	 +
OBJECT_IDENTIFIER	 if
OBJECT_IDENTIFIER	 cell_right_neighbor
ERROR	 (
OBJECT_IDENTIFIER	 position
ERROR	 )
ERROR	 =
STRING	 "X"
OBJECT_IDENTIFIER	 then
INTEGER	 1
OBJECT_IDENTIFIER	 else
INTEGER	 0
OBJECT_IDENTIFIER	 fi
ERROR	 =
INTEGER	 1
ERROR	 )
OBJECT_IDENTIFIER	 then
STRING	 "X"
OBJECT_IDENTIFIER	 else
STRING	 "."
OBJECT_IDENTIFIER	 fi
ERROR	 }
ERROR	 ;
OBJECT_IDENTIFIER	 evolve
ERROR	 (
ERROR	 )
PUNCTUATION	 :
CLASS_IDENTIFIER	 SELF_TYPE
ERROR	 {
ERROR	 (
OBJECT_IDENTIFIER	 let
OBJECT_IDENTIFIER	 position
PUNCTUATION	 :
CLASS_IDENTIFIER	 Int
OBJECT_IDENTIFIER	 in
ERROR	 (
OBJECT_IDENTIFIER	 let
OBJECT_IDENTIFIER	 num
PUNCTUATION	 :
CLASS_IDENTIFIER	 Int
ERROR	 <
ERROR	 -
OBJECT_IDENTIFIER	 num_cells
ERROR	 (
ERROR	 )
OBJECT_IDENTIFIER	 in
ERROR	 (
OBJECT_IDENTIFIER	 let
OBJECT_IDENTIFIER	 temp
PUNCTUATION	 :
CLASS_IDENTIFIER	 String
OBJECT_IDENTIFIER	 in
ERROR	 {
OBJECT_IDENTIFIER	 while
OBJECT_IDENTIFIER	 position
ERROR	 <
OBJECT_IDENTIFIER	 num
OBJECT_IDENTIFIER	 loop
ERROR	 {
OBJECT_IDENTIFIER	 temp
ERROR	 <
ERROR	 -
OBJECT_IDENTIFIER	 temp
OPERATOR	 .
OBJECT_IDENTIFIER	 concat
ERROR	 (
OBJECT_IDENTIFIER	 cell_at_next_evolution
ERROR	 (
OBJECT_IDENTIFIER	 position
ERROR	 )
ERROR	 )
ERROR	 ;
OBJECT_IDENTIFIER	 position
ERROR	 <
ERROR	 -
OBJECT_IDENTIFIER	 position
ERROR	 +
INTEGER	 1
ERROR	 ;
ERROR	 }
OBJECT_IDENTIFIER	 pool
ERROR	 ;
OBJECT_IDENTIFIER	 population_map
ERROR	 <
ERROR	 -
OBJECT_IDENTIFIER	 temp
ERROR	 ;
OBJECT_IDENTIFIER	 self
ERROR	 ;
ERROR	 }
ERROR	 )
ERROR	 )
ERROR	 )
ERROR	 }
ERROR	 ;
ERROR	 }
ERROR	 ;
KEYWORD	 class
CLASS_IDENTIFIER	 Main
ERROR	 {
OBJECT_IDENTIFIER	 cells
PUNCTUATION	 :
CLASS_IDENTIFIER	 CellularAutomaton
ERROR	 ;
OBJECT_IDENTIFIER	 main
ERROR	 (
ERROR	 )
PUNCTUATION	 :
CLASS_IDENTIFIER	 SELF_TYPE
ERROR	 {
ERROR	 {
OBJECT_IDENTIFIER	 cells
ERROR	 <
ERROR	 -
ERROR	 (
OBJECT_IDENTIFIER	 new
CLASS_IDENTIFIER	 CellularAutomaton
ERROR	 )
OPERATOR	 .
KEYWORD	 in
OBJECT_IDENTIFIER	 it
ERROR	 (
STRING	 "         X         "
ERROR	 )
ERROR	 ;
OBJECT_IDENTIFIER	 cells
OPERATOR	 .
OBJECT_IDENTIFIER	 print
ERROR	 (
ERROR	 )
ERROR	 ;
ERROR	 (
OBJECT_IDENTIFIER	 let
OBJECT_IDENTIFIER	 countdown
PUNCTUATION	 :
CLASS_IDENTIFIER	 Int
ERROR	 <
ERROR	 -
INTEGER	 2
INTEGER	 0
KEYWORD	 in
OBJECT_IDENTIFIER	 while
INTEGER	 0
ERROR	 <
OBJECT_IDENTIFIER	 countdown
OBJECT_IDENTIFIER	 loop
ERROR	 {
OBJECT_IDENTIFIER	 cells
OPERATOR	 .
OBJECT_IDENTIFIER	 evolve
ERROR	 (
ERROR	 )
PUNCTUATION	 ;
OBJECT_IDENTIFIER	 cells
OPERATOR	 .
OBJECT_IDENTIFIER	 print
ERROR	 (
ERROR	 )
PUNCTUATION	 ;
OBJECT_IDENTIFIER	 countdown
ERROR	 <
OPERATOR	 -
OBJECT_IDENTIFIER	 countdown
OPERATOR	 -
INTEGER	 1
PUNCTUATION	 ;
ERROR	 }
KEYWORD	 pool
ERROR	 )
PUNCTUATION	 ;
OBJECT_IDENTIFIER	 self
PUNCTUATION	 ;
ERROR	 }
ERROR	 }
PUNCTUATION	 ;
ERROR	 }
PUNCTUATION	 ;
